{"version":3,"sources":["../src/index.js"],"names":["fs","require","program","uploadToGist","console","info","conf","load","config","log","readOneTabData","oneTabData","writeFile","err","data","error","downloadFromGist","gist","download","metadata","backup","res","restoreOneTabData","syncWithGist","detectDownloadOrUpload","restoreFromFile","file","content","readFileSync","toString","db","get","result","close","length","reject","Error","message","put","then","lastsync","catch","pkginfo","JSON","parse","__dirname","version","description","command","action","undefined","noHelp","help","process","argv","args"],"mappings":"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","file":"index.js","sourcesContent":["const fs = require(\"fs\");\n\nconst program = require(\"commander\");\n\nimport gist from \"./gist\";\nimport openOneTabDB from \"./db\";\nimport conf from \"./conf\";\n\nconst uploadToGist = async () => {\n    console.info(\"uploading data to gist ...\");\n    try {\n        let config = await conf.load([\"chrome_profile_path\", \"onetab_ext_id\", \"gist_token\"]);\n        console.log('config - ', config)\n\n        let oneTabData = await readOneTabData(config);\n        console.log('oneTabData - ', typeof oneTabData)\n\n        fs.writeFile('/Users/hanjiyun/Downloads/test.json', oneTabData, (err, data) => {\n          if (err) {\n            return console.log(err);\n          }\n          return '保存好了';\n        });\n\n        // Upload to gist\n        // let res = await gist.upload(config, oneTabData);\n        // console.info(\"success. \" + res.html_url);\n        // return res;\n    } catch(e) {\n        console.error(e);\n    }\n};\n\nconst downloadFromGist = async () => {\n    console.info(\"downloading data from gist ...\");\n    try {\n        let config = await conf.load([\"chrome_profile_path\", \"onetab_ext_id\", \"gist_token\", \"gist_id\"]);\n        let [data, metadata] = await gist.download(config);\n        let oneTabData = await readOneTabData(config);\n        let res = await gist.backup(config, oneTabData);\n        await restoreOneTabData(config, data);\n        console.info(\"success.\");\n        return res;\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nconst syncWithGist = async () => {\n    try {\n        let config = await conf.load([\"chrome_profile_path\", \"onetab_ext_id\", \"gist_token\"]);\n        return await detectDownloadOrUpload(config);\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nconst restoreFromFile = async (file) => {\n    try {\n        let config = await conf.load([\"chrome_profile_path\", \"onetab_ext_id\"]);\n        let content = fs.readFileSync(file).toString();\n        let res = await restoreOneTabData(config, content)\n        console.info(\"success.\");\n        return res;\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nconst readOneTabData = async (config) => {\n    try {\n        let db = await openOneTabDB(config);\n        let result = await db.get();\n        console.log('拿到了 readOneTabData result')\n        await db.close();\n        console.log('真的关了', result.length)\n        return result;\n    } catch (e) {\n        return Promise.reject(\n            new Error(\"can't open chrome localstorage db. If your browser is running, please quit it.\" + e.message)\n        );\n    }\n};\n\n\nconst restoreOneTabData = async (config, data) => {\n    try {\n        let db = await openOneTabDB(config);\n        let result = await db.put(data);\n        await db.close();\n        return result;\n    } catch (e) {\n        return Promise.reject(\n            new Error(\"can't open chrome localstorage db. If your browser is running, please quit it.\" + e.message)\n        );\n    }\n};\n\nconst detectDownloadOrUpload = (config) => {\n    gist.download(config).then(([data, metadata]) => {\n        if (config.lastsync === metadata.lastsync) {\n            return uploadToGist();\n        } else {\n            return downloadFromGist();\n        }\n    }).catch(res => res.message === \"Not Found\" ? uploadToGist() : console.error(res));\n};\n\n\nconst pkginfo = JSON.parse(fs.readFileSync(__dirname + \"/../package.json\"));\nprogram\n    .version(pkginfo.version)\n    .description(pkginfo.description);\n\nprogram\n    .command(\"upload\")\n    .description(\"force upload onetab data to gist\")\n    .action(uploadToGist);\n\nprogram\n    .command(\"download\")\n    .description(\"force download onetab data from gist\")\n    .action(downloadFromGist);\n\nprogram\n    .command(\"sync\")\n    .description(\"sync onetab data with gist\")\n    .action(syncWithGist);\n\nprogram\n    .command(\"restore <file>\")\n    .description(\"restore onetab data from backup file\")\n    .action(restoreFromFile);\n\nprogram\n    .command(\"*\", undefined, {noHelp: true})\n    .action(() => program.help());\n\nprogram.parse(process.argv);\nif (!program.args.length) program.help();\n\n"]}